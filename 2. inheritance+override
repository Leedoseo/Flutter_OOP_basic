// // 상속

// 부모 클래스
class Idol {
  final String name;
  final int membersCount;
  
  Idol(this.name, this.membersCount);
  
  void sayName() {
    print("저는 ${this.name}입니다.");
  }
  
  void sayMembersCount() {
    print("${this.name}멤버는 ${this.membersCount}명입니다.");
  }
}

// 자식 클래스
class BoyGroup extends Idol { // extends 키워드를 사용해서 상속받음. class (자식클래스) extends Idol(부모클래스)
  BoyGroup(
  String name,
  int membersCount,
  ) : super( // supers는 부모 클래스를 지칭함.
  name,
  membersCount,
  );
  
  void sayMale() { // 상속받지 않는 메서드나 변수를 새로 추가할 수 있음. 
    print("저는 남자 아이돌입니다.");
  }
}

// 두 번째 자식 클래스
class GirlGroup extends Idol {
  GirlGroup(
  String name,
  int membersCount,
  ) : super(
  name,
  membersCount,
  );
  
  void sayFeMale() {
    print("저는 여자 아이돌입니다.");
  }
}

void main() {
  BoyGroup bts = BoyGroup("BTS", 7);
  GirlGroup blackPink = GirlGroup("블랙핑크", 4);
  
  bts.sayName();         // 부모한테 물려받은 메서드
  bts.sayMembersCount(); // 부모한테 물려받은 메서드
  bts.sayMale();         // 자식이 새로 추가한 메서드
  blackPink.sayName();
  blackPink.sayMembersCount();
  blackPink.sayFeMale();
  blackPink.sayMale();
}

// 부모 클래스
class Idol {
  final String name;
  final int membersCount;
  
  Idol(this.name, this.membersCount);
  
  void sayName() {
    print("저는 ${this.name}입니다.");
  }
  
  void sayMembersCount() {
    print("${this.name}멤버는 ${this.membersCount}명입니다.");
  }
}

// 오버라이드
class GirlGroup extends Idol {
  // 상속에서처럼 super키워드를 사용해도 되고, 아래처럼 생성자의 매개변수로 직접 super키워드를 사용해도 됨.
  GirlGroup (
  super.name,
  super.membersCount,
  );
  
  // override키워드를 사용해 오버라이드
  @override
  void sayName() {
    print("저는 여자 아이돌 ${this.name}입니다.");
  }
}

void main() {
  GirlGroup blackPink = GirlGroup("블랙핑크", 4);
  
  blackPink.sayName(); // 자식 클래스의 오버라이드된 메서드 사용
  
  // sayMembersCount는 오버라이드 하지 않았기 때문에 Idol클래스의 메서드가 실행됨
  blackPink.sayMembersCount();
}
